<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
    <!-- Nuget executable -->
    <PropertyGroup>
        <NugetExe>$(MSBuildThisFileDirectory)NuGet-4.9.2.exe</NugetExe>
        <NugetURL>https://dist.nuget.org/win-x86-commandline/v4.9.2/nuget.exe</NugetURL>
        <Configuration Condition="'$(Configuration)' == ''">Release</Configuration>
    </PropertyGroup>

    <!-- Download nuget.exe if not present -->
    <Target Name="GetNuget" Condition="!Exists('$(NugetExe)')">
        <Exec Command="powershell -ExecutionPolicy ByPass -Command &quot;(New-Object Net.WebClient).DownloadFile('$(NugetURL)', '$(NugetExe)')&quot;"/>
    </Target>

    <Target Name="RemovePackages">
        <Exec Command="rmdir /s /q $(MSBuildThisFileDirectory)..\packages" Condition="Exists('$(MSBuildThisFileDirectory)..\packages')"/>
    </Target>

    <Target Name="NuGetRestore" DependsOnTargets="Net45NuGetRestore;NetstandardNuGetRestore"/>

    <Target Name="DownloadSymbols" DependsOnTargets="NuGetRestore">
        <MakeDir Directories="$(TEMP)\SymbolCache" />
        <Exec Command="symchk /r $(MSBuildThisFileDirectory)..\packages\zeroc.ice.net.3.7.2\lib\* /s SRV*$(TEMP)\SymbolCache*https://dev.zeroc.com/share/ice/master/nuget/zeroc.ice.net.store/" />
    </Target>

    <Target Name="Net45InstallLocalPackages"
            DependsOnTargets="RemovePackages;GetNuGet"
            Condition="Exists('$(IceHome)\csharp')">
        <!-- Run the distribution NuGetPack target to ensure packages are up to date -->
        <MSBuild Projects="$(IceHome)\csharp\msbuild\ice.proj"
                 Properties="Platform=$(Platform);Configuration=$(Configuration)"
                 RemoveProperties="IceHome"
                 Targets="NuGetPack"/>
        <!-- Add the package to a local source and install it from it -->
        <Exec Command="$(NuGetExe) init $(IceHome)\csharp\msbuild\zeroc.ice.net local" />
        <Exec Command="$(NuGetExe) install zeroc.ice.net -Prerelease -Source $(MSBuildThisFileDirectory)local -NoCache -SolutionDirectory $(MSBuildThisFileDirectory).."/>
        <!-- Remove the local source that is no longer needed -->
        <Exec Command="rmdir /s /q local" />
        <Exec Command="$(NuGetExe) install zeroc.icebuilder.msbuild -SolutionDirectory $(MSBuildThisFileDirectory).."/>
    </Target>

    <Target Name="Net45NuGetRestore" DependsOnTargets="GetNuGet" Condition="!Exists('$(IceHome)\csharp')">
        <Exec Command="$(NuGetExe) restore &quot;$(MSBuildThisFileDirectory)..\C# NET Framework demos.sln&quot;"/>
        <MSbuild Projects="$(MSBuildThisFileDirectory)..\C# NET Core demos.sln" Targets="Restore" Condition="$(VisualStudioVersion) == '15.0'" />
    </Target>

    <Target Name="Net45Build" DependsOnTargets="Net45InstallLocalPackages;Net45NuGetRestore">
        <MSbuild Projects="$(MSBuildThisFileDirectory)..\C# NET Framework demos.sln"
                 Targets="Build"
                 RemoveProperties="IceHome"
                 Properties="Configuration=$(Configuration);Platform=Any CPU"/>
    </Target>

    <Choose>
        <When Condition="'$(OS)' == 'Windows_NT'">
            <PropertyGroup>
                <PackagePath>$(IceHome)\csharp\msbuild\zeroc.ice.net\zeroc.ice.net.3.7.2.nupkg</PackagePath>
                <BuildProperties>Configuration=$(Configuration);Platform=Any CPU</BuildProperties>
            </PropertyGroup>
        </When>
        <Otherwise>
            <PropertyGroup>
                <PackagePath>$(IceHome)/csharp/msbuild/zeroc.ice.net/zeroc.ice.net.3.7.2.nupkg</PackagePath>
                <BuildProperties>Configuration=$(Configuration);Platform=Any CPU;IceToolsPath=$(IceHome)/cpp/bin</BuildProperties>
            </PropertyGroup>
        </Otherwise>
    </Choose>

    <Target Name="NetStandardNuGetRestore" DependsOnTargets="GetNuGet" Condition="!Exists('$(IceHome)\csharp')">
        <MSbuild Projects="$(MSBuildThisFileDirectory)..\C# NET Core demos.sln" Targets="Restore" Condition="$(VisualStudioVersion) == '15.0'" />
    </Target>

    <Target Name="NetStandardInstallLocalPackages"
            Condition="Exists('$(IceHome)\csharp')">
        <Exec Command="dotnet nuget locals --list global-packages" ConsoleToMSBuild="true" EchoOff="yes">
            <Output TaskParameter="ConsoleOutput" PropertyName="NuGetGlobalPackages" />
        </Exec>

        <PropertyGroup>
            <NuGetGlobalPackages>$(NuGetGlobalPackages.Replace('info : global-packages: ', ''))</NuGetGlobalPackages>
        </PropertyGroup>
        <!-- Run the distribution NuGetPack target to ensure packages are up to date -->
        <MSBuild Projects="$(IceHome)\csharp\msbuild\ice.proj"
                 Properties="Platform=$(Platform);Configuration=$(Configuration)"
                 RemoveProperties="IceHome"
                 Targets="NuGetPack"/>

        <RemoveDir Directories="$(NuGetGlobalPackages)\zeroc.ice.net" Condition="Exists('$(NuGetGlobalPackages)\zeroc.ice.net')"/>
        <Exec Command="dotnet nuget push $(PackagePath) --source $(NuGetGlobalPackages)" />

        <MSBuild Projects="$(MSBuildThisFileDirectory)..\C# NET Core demos.sln"
                 Targets="Restore"
                 RemoveProperties="IceHome"
                 Properties="Configuration=$(Configuration);Platform=Any CPU"/>
    </Target>

    <Target Name="NetStandardBuild" DependsOnTargets="NetStandardInstallLocalPackages;NetStandardNuGetRestore">
        <MSbuild Projects="$(MSBuildThisFileDirectory)..\C# NET Core demos.sln"
                 Targets="Build"
                 RemoveProperties="IceHome"
                 Properties="$(BuildProperties)"/>
    </Target>

</Project>
