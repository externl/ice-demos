<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
    <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />

    <!-- Import Ice Version settings when building with Ice source distribution -->
    <Import Project="$(IceHome)\config\icebuilder.props"
            Condition="Exists('$(IceHome)\config\icebuilder.props')"/>

    <!-- Custom task to download files -->
    <!-- Nuget executable -->
    <PropertyGroup>
      <NugetExe>$(MSBuildThisFileDirectory)NuGet-4.9.2.exe</NugetExe>
      <NugetURL>https://dist.nuget.org/win-x86-commandline/v4.9.2/nuget.exe</NugetURL>
    </PropertyGroup>

    <!-- Download nuget.exe if not present -->
    <Target Name="GetNuget" Condition="!Exists('$(NugetExe)')">
      <Exec Command="powershell -ExecutionPolicy ByPass -Command &quot;(New-Object Net.WebClient).DownloadFile('$(NugetURL)', '$(NugetExe)')&quot;"/>
    </Target>

    <Target Name="RemovePackages">
      <Exec Command="rmdir /s /q $(MSBuildThisFileDirectory)..\packages" Condition="Exists('$(MSBuildThisFileDirectory)..\packages')" />
    </Target>

    <Target Name="NuGetRestore" DependsOnTargets="GetNuGet" Condition="!Exists('$(IceHome)\cpp')">
      <Exec Command="$(NuGetExe) restore &quot;$(MSBuildThisFileDirectory)..\C++11 demos.sln&quot;"/>
    </Target>

    <Target Name="UWPNuGetRestore" DependsOnTargets="GetNuGet" Condition="!Exists('$(IceHome)\cpp')">
      <Exec Command="$(NuGetExe) restore &quot;$(MSBuildThisFileDirectory)..\C++11 demos (Universal Windows).sln&quot;"/>
    </Target>

    <PropertyGroup>
      <SymbolServer Condition="'$(SymbolServer)' == ''">$(SYMBOL_SERVER)</SymbolServer>
      <SymbolServer Condition="'$(SymbolServer)' == ''">SRV*%TEMP%\SymbolCache*http://symbols.zeroc.com</SymbolServer>
    </PropertyGroup>

    <Target Name="DownloadSymbols" DependsOnTargets="NuGetRestore">
        <Exec IgnoreExitCode="True"
              Command="symchk /r $(MSBuildThisFileDirectory)..\packages\zeroc.ice.$(DefaultPlatformToolset).3.7.2\build\native\bin\$(Platform)\$(Configuration)\* /s $(SymbolServer)">
              <Output TaskParameter="ExitCode" PropertyName="ErrorCode"/>
        </Exec>
        <Warning Text="PDBs download failed, stack traces might be missing or incomplete" Condition="'$(ErrorCode)' != '0'" />
    </Target>

    <ItemGroup>
        <CppPlatformToolset Include="v140"/>
        <CppPlatformToolset Include="v141"/>
    </ItemGroup>

    <!--
        When IceHome is set to a source distribution we install the NuGet packages
        from IceHome build, for the platform we are building, we also need to copy
        the props and targets files for the rest of platforms supported by the demos
        to get away with NuGet install checks
    -->
    <Target Name="InstallLocalPackages"
            DependsOnTargets="RemovePackages;GetNuGet"
            Condition="Exists('$(IceHome)\cpp')">
        <Copy SourceFiles="$(IceHome)\cpp\msbuild\zeroc.ice.%(CppPlatformToolset.Identity).props"
              DestinationFolder="$(MSBuildThisFileDirectory)..\packages\zeroc.ice.%(CppPlatformToolset.Identity).$(IceVersion)\build\native\" />
        <Copy SourceFiles="$(IceHome)\cpp\msbuild\zeroc.ice.%(CppPlatformToolset.Identity).targets"
              DestinationFolder="$(MSBuildThisFileDirectory)..\packages\zeroc.ice.%(CppPlatformToolset.Identity).$(IceVersion)\build\native\" />
        <Exec Command="rmdir /s /q $(MSBuildThisFileDirectory)..\packages\zeroc.ice.$(DefaultPlatformToolset).$(IceVersion)"
              Condition="Exists('$(MSBuildThisFileDirectory)..\packages\zeroc.ice.$(DefaultPlatformToolset).$(IceVersion)')"/>

        <!-- Run the distribution NuGetPack target to ensure packages are up to date -->
        <MSBuild Projects="$(IceHome)\cpp\msbuild\ice.proj"
                 Properties="Platform=$(Platform);Configuration=$(Configuration)"
                 RemoveProperties="IceHome"
                 Targets="NuGetPack"/>
        <!-- Add the package to a local source and install it from it -->
        <Exec Command="$(NuGetExe) init $(IceHome)\cpp\msbuild\zeroc.ice.$(DefaultPlatformToolset) local" />
        <Exec Command="$(NuGetExe) install zeroc.ice.$(DefaultPlatformToolset) -Source $(MSBuildThisFileDirectory)local -NoCache -SolutionDirectory $(MSBuildThisFileDirectory).."/>
        <!-- Remove the local source that is no longer needed -->
        <Exec Command="rmdir /s /q local" />
        <Exec Command="$(NuGetExe) install zeroc.icebuilder.msbuild -SolutionDirectory $(MSBuildThisFileDirectory).."/>
    </Target>

    <Target Name="Build"
            DependsOnTargets="InstallLocalPackages;NuGetRestore">
        <MSBuild Projects="$(MSBuildThisFileDirectory)..\C++11 demos.sln" RemoveProperties="IceHome"/>
    </Target>

    <!-- Same as above but for UWP builds -->
    <Target Name="UWPInstallLocalPackages"
            DependsOnTargets="RemovePackages;GetNuGet"
            Condition="Exists('$(IceHome)\cpp')">

        <Copy SourceFiles="$(IceHome)\cpp\msbuild\zeroc.ice.uwp.%(CppPlatformToolset.Identity).props"
              DestinationFolder="$(MSBuildThisFileDirectory)..\packages\zeroc.ice.uwp.%(CppPlatformToolset.Identity).$(IceVersion)\build\native\" />

        <Copy SourceFiles="$(IceHome)\cpp\msbuild\zeroc.ice.uwp.%(CppPlatformToolset.Identity).targets"
              DestinationFiles="$(MSBuildThisFileDirectory)..\packages\zeroc.ice.uwp.%(CppPlatformToolset.Identity).x86.$(IceVersion)\build\native\zeroc.ice.uwp.%(CppPlatformToolset.Identity).x86.targets" />
        <Copy SourceFiles="$(IceHome)\cpp\msbuild\zeroc.ice.uwp.%(CppPlatformToolset.Identity).targets"
              DestinationFiles="$(MSBuildThisFileDirectory)..\packages\zeroc.ice.uwp.%(CppPlatformToolset.Identity).x64.$(IceVersion)\build\native\zeroc.ice.uwp.%(CppPlatformToolset.Identity).x64.targets" />
        <Exec Command="rmdir /s /q $(MSBuildThisFileDirectory)..\packages\zeroc.ice.$(DefaultPlatformToolset).$(IceVersion)"
              Condition="Exists('$(MSBuildThisFileDirectory)..\packages\zeroc.ice.$(DefaultPlatformToolset).$(IceVersion)')"/>

        <!-- Run the distribution NuGetPack target to ensure packages are up to date -->
        <MSBuild Projects="$(IceHome)\cpp\msbuild\ice.proj"
                 Properties="Platform=$(Platform);Configuration=$(Configuration)"
                 RemoveProperties="IceHome"
                 Targets="UWPNuGetPack"/>
        <!-- Add the packages to a local source and install it from it -->
        <Exec Command="$(NuGetExe) init $(IceHome)\cpp\msbuild\zeroc.ice.uwp.$(DefaultPlatformToolset) local" />
        <Exec Command="$(NuGetExe) init $(IceHome)\cpp\msbuild\zeroc.ice.uwp.$(DefaultPlatformToolset).x86 local" />
        <Exec Command="$(NuGetExe) init $(IceHome)\cpp\msbuild\zeroc.ice.uwp.$(DefaultPlatformToolset).x64 local" />
        <Exec Command="$(NuGetExe) install zeroc.ice.uwp.$(DefaultPlatformToolset) -Source $(MSBuildThisFileDirectory)local -NoCache -SolutionDirectory $(MSBuildThisFileDirectory).."/>
        <!-- Remove the local source that is no longer needed -->
        <Exec Command="rmdir /s /q local" />
        <Exec Command="$(NuGetExe) install zeroc.icebuilder.msbuild -SolutionDirectory $(MSBuildThisFileDirectory).."/>
    </Target>

    <Target Name="UWPBuild"
            DependsOnTargets="UWPInstallLocalPackages;UWPNugetRestore">
        <MSBuild Projects="$(MSBuildThisFileDirectory)..\C++11 demos (Universal Windows).sln" RemoveProperties="IceHome"/>
    </Target>
</Project>
