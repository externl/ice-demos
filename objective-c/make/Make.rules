# **********************************************************************
#
# Copyright (c) 2003-present ZeroC, Inc. All rights reserved.
#
# **********************************************************************

# ----------------------------------------------------------------------
# Don't change anything below this line!
# ----------------------------------------------------------------------

-include        $(lang_srcdir)/config/Make.rules.$(os)

#
# Supported configurations
#
supported-configs               = shared static

# Validate platforms and configs
$(eval $(call validate-config))

#
# Objective-C dependencies
#
cpp-dependencies                = Ice IceSSL IceDiscovery
Ice_libs                        = bz2
objc-dependencies               = IceObjC Glacier2ObjC IceGridObjC IceSSLObjC IceStormObjC
IceObjC_dependencies            = Ice
Glacier2ObjC_dependencies       = IceObjC
IceGridObjC_dependencies        = Glacier2ObjC IceObjC
IcePatch2ObjC_dependencies      = IceObjC
IceSSLObjC_dependencies         = IceObjC
IceStormObjC_dependencies       = IceObjC

# Create component dependency variables
$(eval $(call create-project-dependencies,ice,$(ICE_HOME),cpp,objective-c,$(cpp-dependencies) $(objc-dependencies)))

slice2objc_targetext            = m
slice2objc_path                 = $(ice_bindir)/slice2objc

ifeq ($(wildcard $(slice2objc_path)),)
$(error Can't find Ice distribution, please set ICE_HOME to the Ice installation directory)
endif

#
# Don't set config/platform targetdir/targetname for demos. The executables are always
# produced in the demo directory with the same name regardless of the config/platform.
#
$(foreach v,$(supported-configs) $(supported-platforms) platform config,$(eval $v_targetdir := )\
                                                                        $(eval $v_targetname := ))

#
# $(create-cpp-demo-project $1=demo)
#
define create-objc-demo-project
$1_targetdir            := $1
$1_srcext               := m
$1_dependencies         := $$(or $$($1_dependencies),IceObjC)
$1_slicecompiler        := slice2objc
$1_sliceflags           += -I$(ice_slicedir) -I$1
$1_cppflags             += -I$1 -I$1/generated $(ice_cppflags)
$1_ldflags              += -framework Foundation
$1_caninstall           := no

# Disable unused parameter warnings in Objective-C
$1_cppflags             += -Wno-unused-parameter

# These demos are ARC-only
$1_cppflags             += -fobjc-arc -fobjc-arc-exceptions

$1[static]_ldflags      := -ObjC

# Also link with IceSSL, IceDiscovery and IceLocatorDiscovery when compiling the project with the static configuration
$1[static]_dependencies := $$(or $$($1_dependencies[static]),IceSSL IceDiscovery)

$(create-demo-project)
endef
